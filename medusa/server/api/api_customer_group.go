/*
 * Medusa Admin API
 *
 * API reference for Medusa's Admin endpoints. All endpoints are prefixed with `/admin`.  ## Authentication  There are two ways to send authenticated requests to the Medusa server: Using a user's API token, or using a Cookie Session ID.  <!-- ReDoc-Inject: <SecurityDefinitions> --> 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// DeleteCustomerGroupsCustomerGroup - Delete a Customer Group
func DeleteCustomerGroupsCustomerGroup(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// DeleteCustomerGroupsGroupCustomerBatch - Remove Customers
func DeleteCustomerGroupsGroupCustomerBatch(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetCustomerGroups - List Customer Groups
func GetCustomerGroups(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetCustomerGroupsGroup - Get a Customer Group
func GetCustomerGroupsGroup(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetCustomerGroupsGroupCustomers - List Customers
func GetCustomerGroupsGroupCustomers(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostCustomerGroups - Create a Customer Group
func PostCustomerGroups(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostCustomerGroupsGroup - Update a Customer Group
func PostCustomerGroupsGroup(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostCustomerGroupsGroupCustomersBatch - Add Customers
func PostCustomerGroupsGroupCustomersBatch(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

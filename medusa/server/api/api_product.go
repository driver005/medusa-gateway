/*
 * Medusa Admin API
 *
 * API reference for Medusa's Admin endpoints. All endpoints are prefixed with `/admin`.  ## Authentication  There are two ways to send authenticated requests to the Medusa server: Using a user's API token, or using a Cookie Session ID.  <!-- ReDoc-Inject: <SecurityDefinitions> --> 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// DeleteProductsProduct - Delete a Product
func DeleteProductsProduct(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// DeleteProductsProductOptionsOption - Delete a Product Option
func DeleteProductsProductOptionsOption(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// DeleteProductsProductVariantsVariant - Delete a Product Variant
func DeleteProductsProductVariantsVariant(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetPriceListsPriceListProducts - List Products
func GetPriceListsPriceListProducts(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetProducts - List Products
func GetProducts(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetProductsProduct - Get a Product
func GetProductsProduct(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetProductsProductVariants - List a Product's Variants
func GetProductsProductVariants(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// GetProductsTypes - List Product Types
func GetProductsTypes(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostProducts - Create a Product
func PostProducts(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostProductsProduct - Update a Product
func PostProductsProduct(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostProductsProductMetadata - Set Product Metadata
func PostProductsProductMetadata(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostProductsProductOptions - Add an Option
func PostProductsProductOptions(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostProductsProductOptionsOption - Update a Product Option
func PostProductsProductOptionsOption(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostProductsProductVariants - Create a Product Variant
func PostProductsProductVariants(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// PostProductsProductVariantsVariant - Update a Product Variant
func PostProductsProductVariantsVariant(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

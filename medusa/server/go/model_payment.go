/*
 * Medusa Admin API
 *
 * API reference for Medusa's Admin endpoints. All endpoints are prefixed with `/admin`.  ## Authentication  There are two ways to send authenticated requests to the Medusa server: Using a user's API token, or using a Cookie Session ID.  <!-- ReDoc-Inject: <SecurityDefinitions> --> 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

// Payment - Payments represent an amount authorized with a given payment method, Payments can be captured, canceled or refunded.
type Payment struct {

	// The payment's ID
	Id string `json:"id,omitempty"`

	// The ID of the Swap that the Payment is used for.
	SwapId string `json:"swap_id,omitempty"`

	// A swap object. Available if the relation `swap` is expanded.
	Swap map[string]interface{} `json:"swap,omitempty"`

	// The id of the Cart that the Payment Session is created for.
	CartId string `json:"cart_id,omitempty"`

	// A cart object. Available if the relation `cart` is expanded.
	Cart map[string]interface{} `json:"cart,omitempty"`

	// The ID of the Order that the Payment is used for.
	OrderId string `json:"order_id,omitempty"`

	// An order object. Available if the relation `order` is expanded.
	Order map[string]interface{} `json:"order,omitempty"`

	// The amount that the Payment has been authorized for.
	Amount int32 `json:"amount"`

	// The 3 character ISO currency code that the Payment is completed in.
	CurrencyCode string `json:"currency_code"`

	Currency Currency `json:"currency,omitempty"`

	// The amount of the original Payment amount that has been refunded back to the Customer.
	AmountRefunded int32 `json:"amount_refunded,omitempty"`

	// The id of the Payment Provider that is responsible for the Payment
	ProviderId string `json:"provider_id"`

	// The data required for the Payment Provider to identify, modify and process the Payment. Typically this will be an object that holds an id to the external payment session, but can be an empty object if the Payment Provider doesn't hold any state.
	Data map[string]interface{} `json:"data,omitempty"`

	// The date with timezone at which the Payment was captured.
	CapturedAt time.Time `json:"captured_at,omitempty"`

	// The date with timezone at which the Payment was canceled.
	CanceledAt time.Time `json:"canceled_at,omitempty"`

	// Randomly generated key used to continue the completion of a payment in case of failure.
	IdempotencyKey string `json:"idempotency_key,omitempty"`

	// The date with timezone at which the resource was created.
	CreatedAt time.Time `json:"created_at,omitempty"`

	// The date with timezone at which the resource was updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`

	// An optional key-value map with additional details
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

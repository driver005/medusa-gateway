/*
 * Medusa Admin API
 *
 * API reference for Medusa's Admin endpoints. All endpoints are prefixed with `/admin`.  ## Authentication  There are two ways to send authenticated requests to the Medusa server: Using a user's API token, or using a Cookie Session ID.  <!-- ReDoc-Inject: <SecurityDefinitions> --> 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

// DiscountCondition - Holds rule conditions for when a discount is applicable
type DiscountCondition struct {

	// The discount condition's ID
	Id string `json:"id,omitempty"`

	// The type of the Condition
	Type string `json:"type"`

	// The operator of the Condition
	Operator string `json:"operator"`

	// The ID of the discount rule associated with the condition
	DiscountRuleId string `json:"discount_rule_id"`

	DiscountRule DiscountRule `json:"discount_rule,omitempty"`

	// products associated with this condition if type = products. Available if the relation `products` is expanded.
	Products []map[string]interface{} `json:"products,omitempty"`

	// product types associated with this condition if type = product_types. Available if the relation `product_types` is expanded.
	ProductTypes []map[string]interface{} `json:"product_types,omitempty"`

	// product tags associated with this condition if type = product_tags. Available if the relation `product_tags` is expanded.
	ProductTags []map[string]interface{} `json:"product_tags,omitempty"`

	// product collections associated with this condition if type = product_collections. Available if the relation `product_collections` is expanded.
	ProductCollections []map[string]interface{} `json:"product_collections,omitempty"`

	// customer groups associated with this condition if type = customer_groups. Available if the relation `customer_groups` is expanded.
	CustomerGroups []map[string]interface{} `json:"customer_groups,omitempty"`

	// The date with timezone at which the resource was created.
	CreatedAt time.Time `json:"created_at,omitempty"`

	// The date with timezone at which the resource was updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`

	// The date with timezone at which the resource was deleted.
	DeletedAt time.Time `json:"deleted_at,omitempty"`

	// An optional key-value map with additional details
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

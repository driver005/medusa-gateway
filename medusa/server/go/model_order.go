/*
 * Medusa Admin API
 *
 * API reference for Medusa's Admin endpoints. All endpoints are prefixed with `/admin`.  ## Authentication  There are two ways to send authenticated requests to the Medusa server: Using a user's API token, or using a Cookie Session ID.  <!-- ReDoc-Inject: <SecurityDefinitions> --> 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

// Order - Represents an order
type Order struct {

	// The order's ID
	Id string `json:"id,omitempty"`

	// The order's status
	Status string `json:"status,omitempty"`

	// The order's fulfillment status
	FulfillmentStatus string `json:"fulfillment_status,omitempty"`

	// The order's payment status
	PaymentStatus string `json:"payment_status,omitempty"`

	// The order's display ID
	DisplayId int32 `json:"display_id,omitempty"`

	// The ID of the cart associated with the order
	CartId string `json:"cart_id,omitempty"`

	// A cart object. Available if the relation `cart` is expanded.
	Cart map[string]interface{} `json:"cart,omitempty"`

	// The ID of the customer associated with the order
	CustomerId string `json:"customer_id"`

	// A customer object. Available if the relation `customer` is expanded.
	Customer map[string]interface{} `json:"customer,omitempty"`

	// The email associated with the order
	Email string `json:"email"`

	// The ID of the billing address associated with the order
	BillingAddressId string `json:"billing_address_id,omitempty"`

	BillingAddress Address `json:"billing_address,omitempty"`

	// The ID of the shipping address associated with the order
	ShippingAddressId string `json:"shipping_address_id,omitempty"`

	ShippingAddress Address `json:"shipping_address,omitempty"`

	// The region's ID
	RegionId string `json:"region_id"`

	// A region object. Available if the relation `region` is expanded.
	Region map[string]interface{} `json:"region,omitempty"`

	// The 3 character currency code that is used in the order
	CurrencyCode string `json:"currency_code"`

	Currency Currency `json:"currency,omitempty"`

	// The order's tax rate
	TaxRate float32 `json:"tax_rate,omitempty"`

	// The discounts used in the order. Available if the relation `discounts` is expanded.
	Discounts []map[string]interface{} `json:"discounts,omitempty"`

	// The gift cards used in the order. Available if the relation `gift_cards` is expanded.
	GiftCards []map[string]interface{} `json:"gift_cards,omitempty"`

	// The shipping methods used in the order. Available if the relation `shipping_methods` is expanded.
	ShippingMethods []ShippingMethod `json:"shipping_methods,omitempty"`

	// The payments used in the order. Available if the relation `payments` is expanded.
	Payments []Payment `json:"payments,omitempty"`

	// The fulfillments used in the order. Available if the relation `fulfillments` is expanded.
	Fulfillments []Fulfillment `json:"fulfillments,omitempty"`

	// The returns associated with the order. Available if the relation `returns` is expanded.
	Returns []map[string]interface{} `json:"returns,omitempty"`

	// The claims associated with the order. Available if the relation `claims` is expanded.
	Claims []map[string]interface{} `json:"claims,omitempty"`

	// The refunds associated with the order. Available if the relation `refunds` is expanded.
	Refunds []map[string]interface{} `json:"refunds,omitempty"`

	// The swaps associated with the order. Available if the relation `swaps` is expanded.
	Swaps []map[string]interface{} `json:"swaps,omitempty"`

	// The ID of the draft order this order is associated with.
	DraftOrderId string `json:"draft_order_id,omitempty"`

	// A draft order object. Available if the relation `draft_order` is expanded.
	DraftOrder map[string]interface{} `json:"draft_order,omitempty"`

	// The line items that belong to the order. Available if the relation `items` is expanded.
	Items []LineItem `json:"items,omitempty"`

	// [EXPERIMENTAL] Order edits done on the order. Available if the relation `edits` is expanded.
	Edits []OrderEdit `json:"edits,omitempty"`

	// The gift card transactions used in the order. Available if the relation `gift_card_transactions` is expanded.
	GiftCardTransactions []GiftCardTransaction `json:"gift_card_transactions,omitempty"`

	// The date the order was canceled on.
	CanceledAt time.Time `json:"canceled_at,omitempty"`

	// Flag for describing whether or not notifications related to this should be send.
	NoNotification bool `json:"no_notification,omitempty"`

	// Randomly generated key used to continue the processing of the order in case of failure.
	IdempotencyKey string `json:"idempotency_key,omitempty"`

	// The ID of an external order.
	ExternalId string `json:"external_id,omitempty"`

	// The ID of the sales channel this order is associated with.
	SalesChannelId string `json:"sales_channel_id,omitempty"`

	// A sales channel object. Available if the relation `sales_channel` is expanded.
	SalesChannel map[string]interface{} `json:"sales_channel,omitempty"`

	// The total of shipping
	ShippingTotal int32 `json:"shipping_total,omitempty"`

	// The total of discount
	DiscountTotal int32 `json:"discount_total,omitempty"`

	// The total of tax
	TaxTotal int32 `json:"tax_total,omitempty"`

	// The total amount refunded if the order is returned.
	RefundedTotal int32 `json:"refunded_total,omitempty"`

	// The total amount of the order
	Total int32 `json:"total,omitempty"`

	// The subtotal of the order
	Subtotal int32 `json:"subtotal,omitempty"`

	// The total amount paid
	PaidTotal int32 `json:"paid_total,omitempty"`

	// The amount that can be refunded
	RefundableAmount int32 `json:"refundable_amount,omitempty"`

	// The total of gift cards
	GiftCardTotal int32 `json:"gift_card_total,omitempty"`

	// The total of gift cards with taxes
	GiftCardTaxTotal int32 `json:"gift_card_tax_total,omitempty"`
}

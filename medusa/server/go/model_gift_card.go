/*
 * Medusa Admin API
 *
 * API reference for Medusa's Admin endpoints. All endpoints are prefixed with `/admin`.  ## Authentication  There are two ways to send authenticated requests to the Medusa server: Using a user's API token, or using a Cookie Session ID.  <!-- ReDoc-Inject: <SecurityDefinitions> --> 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

// GiftCard - Gift Cards are redeemable and represent a value that can be used towards the payment of an Order.
type GiftCard struct {

	// The cart's ID
	Id string `json:"id,omitempty"`

	// The unique code that identifies the Gift Card. This is used by the Customer to redeem the value of the Gift Card.
	Code string `json:"code"`

	// The value that the Gift Card represents.
	Value int32 `json:"value"`

	// The remaining value on the Gift Card.
	Balance int32 `json:"balance"`

	// The id of the Region in which the Gift Card is available.
	RegionId string `json:"region_id"`

	// A region object. Available if the relation `region` is expanded.
	Region map[string]interface{} `json:"region,omitempty"`

	// The id of the Order that the Gift Card was purchased in.
	OrderId string `json:"order_id,omitempty"`

	// An order object. Available if the relation `order` is expanded.
	Order map[string]interface{} `json:"order,omitempty"`

	// Whether the Gift Card has been disabled. Disabled Gift Cards cannot be applied to carts.
	IsDisabled bool `json:"is_disabled,omitempty"`

	// The time at which the Gift Card can no longer be used.
	EndsAt time.Time `json:"ends_at,omitempty"`

	// The date with timezone at which the resource was created.
	CreatedAt time.Time `json:"created_at,omitempty"`

	// The date with timezone at which the resource was updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`

	// The date with timezone at which the resource was deleted.
	DeletedAt time.Time `json:"deleted_at,omitempty"`

	// An optional key-value map with additional details
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

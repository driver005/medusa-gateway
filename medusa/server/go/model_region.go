/*
 * Medusa Admin API
 *
 * API reference for Medusa's Admin endpoints. All endpoints are prefixed with `/admin`.  ## Authentication  There are two ways to send authenticated requests to the Medusa server: Using a user's API token, or using a Cookie Session ID.  <!-- ReDoc-Inject: <SecurityDefinitions> --> 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

// Region - Regions hold settings for how Customers in a given geographical location shop. The is, for example, where currencies and tax rates are defined. A Region can consist of multiple countries to accomodate common shopping settings across countries.
type Region struct {

	// The cart's ID
	Id string `json:"id,omitempty"`

	// The name of the region as displayed to the customer. If the Region only has one country it is recommended to write the country name.
	Name string `json:"name"`

	// The 3 character currency code that the Region uses.
	CurrencyCode string `json:"currency_code"`

	Currency Currency `json:"currency,omitempty"`

	// The tax rate that should be charged on purchases in the Region.
	TaxRate float32 `json:"tax_rate"`

	// The tax rates that are included in the Region. Available if the relation `tax_rates` is expanded.
	TaxRates []TaxRate `json:"tax_rates,omitempty"`

	// The tax code used on purchases in the Region. This may be used by other systems for accounting purposes.
	TaxCode string `json:"tax_code,omitempty"`

	// Whether the gift cards are taxable or not in this region.
	GiftCardsTaxable bool `json:"gift_cards_taxable,omitempty"`

	// Whether taxes should be automated in this region.
	AutomaticTaxes bool `json:"automatic_taxes,omitempty"`

	// The countries that are included in the Region. Available if the relation `countries` is expanded.
	Countries []Country `json:"countries,omitempty"`

	// The ID of the tax provider used in this region
	TaxProviderId string `json:"tax_provider_id,omitempty"`

	TaxProvider TaxProvider `json:"tax_provider,omitempty"`

	// The Payment Providers that can be used to process Payments in the Region. Available if the relation `payment_providers` is expanded.
	PaymentProviders []PaymentProvider `json:"payment_providers,omitempty"`

	// The Fulfillment Providers that can be used to fulfill orders in the Region. Available if the relation `payment_providers` is expanded.
	FulfillmentProviders []FulfillmentProvider `json:"fulfillment_providers,omitempty"`

	// [EXPERIMENTAL] Does the prices for the region include tax
	IncludesTax bool `json:"includes_tax,omitempty"`

	// The date with timezone at which the resource was created.
	CreatedAt time.Time `json:"created_at,omitempty"`

	// The date with timezone at which the resource was updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`

	// The date with timezone at which the resource was deleted.
	DeletedAt time.Time `json:"deleted_at,omitempty"`

	// An optional key-value map with additional details
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

/*
 * Medusa Admin API
 *
 * API reference for Medusa's Admin endpoints. All endpoints are prefixed with `/admin`.  ## Authentication  There are two ways to send authenticated requests to the Medusa server: Using a user's API token, or using a Cookie Session ID.  <!-- ReDoc-Inject: <SecurityDefinitions> --> 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

// ModelReturn - Return orders hold information about Line Items that a Customer wishes to send back, along with how the items will be returned. Returns can be used as part of a Swap.
type ModelReturn struct {

	// The return's ID
	Id string `json:"id,omitempty"`

	// Status of the Return.
	Status string `json:"status,omitempty"`

	// The Return Items that will be shipped back to the warehouse. Available if the relation `items` is expanded.
	Items []ReturnItem `json:"items,omitempty"`

	// The ID of the Swap that the Return is a part of.
	SwapId string `json:"swap_id,omitempty"`

	// A swap object. Available if the relation `swap` is expanded.
	Swap map[string]interface{} `json:"swap,omitempty"`

	// The ID of the Order that the Return is made from.
	OrderId string `json:"order_id,omitempty"`

	// An order object. Available if the relation `order` is expanded.
	Order map[string]interface{} `json:"order,omitempty"`

	// The ID of the Claim that the Return is a part of.
	ClaimOrderId string `json:"claim_order_id,omitempty"`

	// A claim order object. Available if the relation `claim_order` is expanded.
	ClaimOrder map[string]interface{} `json:"claim_order,omitempty"`

	// The Shipping Method that will be used to send the Return back. Can be null if the Customer facilitates the return shipment themselves. Available if the relation `shipping_method` is expanded.
	ShippingMethod []ShippingMethod `json:"shipping_method,omitempty"`

	// Data about the return shipment as provided by the Fulfilment Provider that handles the return shipment.
	ShippingData map[string]interface{} `json:"shipping_data,omitempty"`

	// The amount that should be refunded as a result of the return.
	RefundAmount int32 `json:"refund_amount"`

	// When set to true, no notification will be sent related to this return.
	NoNotification bool `json:"no_notification,omitempty"`

	// Randomly generated key used to continue the completion of the return in case of failure.
	IdempotencyKey string `json:"idempotency_key,omitempty"`

	// The date with timezone at which the return was received.
	ReceivedAt time.Time `json:"received_at,omitempty"`

	// The date with timezone at which the resource was created.
	CreatedAt time.Time `json:"created_at,omitempty"`

	// The date with timezone at which the resource was updated.
	UpdatedAt time.Time `json:"updated_at,omitempty"`

	// An optional key-value map with additional details
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}
